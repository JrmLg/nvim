# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt


snippet snip "insert un nouveau snippet" i
priority ${1:1}
`!p snip.rv="snippet"` ${2:trig} "${3:Description}" i
${0}
`!p snip.rv="endsnippet"`
endsnippet

snippet py "Insert un extrait de code python" i
\`!p
${1}
\`
endsnippet

priority 1
snippet pyrv "Insert un extrait de code python avec retour de valeur" i
\`!p snip.rv=${1}\`
endsnippet

snippet 'py(thon)?\s+(\w*)' "Insert une variable python" ir
\`!p snip.rv=`!p snip.rv=match.group(2)`\`${1}
endsnippet

priority 1
snippet group "Renvoie le groupe de l'expression régulière" i
\`!p snip.rv=match.group(${1:1})\`${2}
endsnippet

priority 0
snippet 'group\s*(\d*)' "Renvoie le groupe de l'expression régulière" ir
\`!p snip.rv=match.group(`!p snip.rv=match.group(1)`)\`${1}
endsnippet

priority 0
snippet 'var' "Insert une variable" ri
${${1:1}:${2:defaultValue}}${0}
endsnippet
